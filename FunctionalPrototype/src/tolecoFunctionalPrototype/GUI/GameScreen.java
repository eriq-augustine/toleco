/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GameScreen.java
 *
 * Created on Feb 22, 2010, 3:04:59 PM
 */

package tolecoFunctionalPrototype.GUI;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import tolecoFunctionalPrototype.Core.*;

/**
 *
 * @author eaugusti
 */
public class GameScreen extends javax.swing.JFrame{

    private GUI_Controller controller;
    private Logic logic;

    /** Creates new form GameScreen */
    public GameScreen() {
        initComponents();

        try
        {
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
        }
        catch (Exception e)
        {
            System.err.println("Unable to change look and feel.");
        }

        controller = new GUI_Controller();
        logic = new Logic();

        gameBoard1.setController(controller);
        buttonPanel1.setController(controller);

        controller.gameStart(logic, statusPanel2, buttonPanel1, gameBoard1);

        setupKeys();
    }

   public void setupKeys()
   {
       Action upAction = new AbstractAction()
       {
             public void actionPerformed(ActionEvent e)
             {
                //System.out.println("UP");
                controller.move(new KeyEvent(GameScreen.this, 0, 0, 0, KeyEvent.VK_UP, 'u'));
             }
       };

       Action downAction = new AbstractAction()
       {
             public void actionPerformed(ActionEvent e)
             {
                //System.out.println("DOWN");
                controller.move(new KeyEvent(GameScreen.this, 0, 0, 0, KeyEvent.VK_DOWN, 'd'));
             }
       };

       Action leftAction = new AbstractAction()
       {
             public void actionPerformed(ActionEvent e)
             {
                 //System.out.println("LEFT");
                 controller.move(new KeyEvent(GameScreen.this, 0, 0, 0, KeyEvent.VK_LEFT, 'l'));
             }
       };

       Action rightAction = new AbstractAction()
       {
             public void actionPerformed(ActionEvent e)
             {
                 //System.out.println("Right");
                 controller.move(new KeyEvent(GameScreen.this, 0, 0, 0, KeyEvent.VK_RIGHT, 'r'));
             }
       };

        gameBoard1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_W, 0), "upAction");
        gameBoard1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("released UP"), "upAction");
        gameBoard1.getActionMap().put("upAction", upAction);

        gameBoard1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_S, 0), "downAction");
        gameBoard1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("released DOWN"), "downAction");
        gameBoard1.getActionMap().put("downAction", downAction);

        gameBoard1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_A, 0), "leftAction");
        gameBoard1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("released LEFT"), "leftAction");
        gameBoard1.getActionMap().put("leftAction", leftAction);

        gameBoard1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_D, 0), "rightAction");
        gameBoard1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("released RIGHT"), "rightAction");
        gameBoard1.getActionMap().put("rightAction", rightAction);
   }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      statusPanel2 = new tolecoFunctionalPrototype.GUI.StatusPanel();
      buttonPanel1 = new tolecoFunctionalPrototype.GUI.ButtonPanel();
      gameBoard1 = new tolecoFunctionalPrototype.GUI.GameBoard();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setForeground(java.awt.Color.white);
      setResizable(false);

      gameBoard1.setPreferredSize(new java.awt.Dimension(400, 400));

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(gameBoard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(statusPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(buttonPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addComponent(statusPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
            .addComponent(buttonPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(gameBoard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(21, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameScreen().setVisible(true);
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private tolecoFunctionalPrototype.GUI.ButtonPanel buttonPanel1;
   private tolecoFunctionalPrototype.GUI.GameBoard gameBoard1;
   private tolecoFunctionalPrototype.GUI.StatusPanel statusPanel2;
   // End of variables declaration//GEN-END:variables

}
